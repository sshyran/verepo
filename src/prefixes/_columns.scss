// A mixin that generates CSS prefixes for columns
// @mixin columns
// @category prefixes
// @param $val {String} columns' valid value
// @usage:
// .an-element{
// 	=columns(value);
// }
@mixin columns($val){
	-webkit-columns: $val;
	-moz-columns: $val;
	columns: $val;
}

// A mixin that generates CSS prefixes for column-width
// @mixin column-width
// @category prefixes
// @param $val {String} column-width' valid value
// @usage:
// .an-element{
// 	=column-width(value);
// }
@mixin column-width($val){
	-webkit-column-width: $val;
	-moz-column-width: $val;
	column-width: $val;
}

// A mixin that generates CSS prefixes for column-count
// @mixin column-count
// @category prefixes
// @param $val {String} column-count' valid value
// @usage:
// .an-element{
// 	=column-count(value);
// }
@mixin column-count($val){
	-webkit-column-count: $val;
	-moz-column-count: $val;
	column-count: $val;
}

// A mixin that generates CSS prefixes for column-gap
// @mixin column-gap
// @category prefixes
// @param $val {String} column-gap' valid value
// @usage:
// .an-element{
// 	=column-gap(value);
// }
@mixin column-gap($val){
	-webkit-column-gap: $val;
	-moz-column-gap: $val;
	column-gap: $val;
}

// A mixin that generates CSS prefixes for column-span
// @mixin column-span
// @category prefixes
// @param $val {String} column-span' valid value
// @usage:
// .an-element{
// 	=column-span(value);
// }
@mixin column-span($val){
	-webkit-column-span: $val;
	-moz-column-span: $val;
	column-span: $val;
}

// A mixin that generates CSS prefixes for column-rule
// @mixin column-rule
// @category prefixes
// @param $val {String} column-rule' valid value
// @usage:
// .an-element{
// 	=column-rule(value);
// }
@mixin column-rule($val){
	-webkit-column-rule: $val;
	-moz-column-rule: $val;
	column-rule: $val;
}

// A mixin that generates CSS prefixes for column-rule-color
// @mixin column-rule-color
// @category prefixes
// @param $val {String} column-rule-color' valid value
// @usage:
// .an-element{
// 	=column-rule-color(value);
// }
@mixin column-rule-color($val){
	-webkit-column-rule-color: $val;
	-moz-column-rule-color: $val;
	column-rule-color: $val;
}

// A mixin that generates CSS prefixes for column-rule-style
// @mixin column-rule-style
// @category prefixes
// @param $val {String} column-rule-style' valid value
// @usage:
// .an-element{
// 	=column-rule-style(value);
// }
@mixin column-rule-style($val){
	-webkit-column-rule-style: $val;
	-moz-column-rule-style: $val;
	column-rule-style: $val;
}

// A mixin that generates CSS prefixes for column-rule-width
// @mixin column-rule-width
// @category prefixes
// @param $val {String} column-rule-width' valid value
// @usage:
// .an-element{
// 	=column-rule-width(value);
// }
@mixin column-rule-width($val){
	-webkit-column-rule-width: $val;
	-moz-column-rule-width: $val;
	column-rule-width: $val;
}

// A mixin that generates CSS prefixes for column-fill
// @mixin column-fill
// @category prefixes
// @param $val {String} column-fill' valid value
// @usage:
// .an-element{
// 	=column-fill(value);
// }
@mixin column-fill($val){
	-webkit-column-fill: $val;
	-moz-column-fill: $val;
	column-fill: $val;
}
